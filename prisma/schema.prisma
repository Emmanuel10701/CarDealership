generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String?
  phone         String?
  role          UserRole  @default(USER)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  cars          Car[]     @relation("UserCars")

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model CarListing {
  id           String   @id @default(cuid())
  reference    String   @unique
  carName      String
  year         Int
  price        Float
  location     String
  carType      String
  mileage      Int
  transmission String
  fuelType     String
  features     String[]
  description  String
  sellerName   String
  sellerPhone  String
  sellerEmail  String
  images       Json
  status       String   @default("pending")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("car_listings")
}

model Car {
  id           String   @id @default(cuid())
  name         String
  price        String
  location     String
  year         String
  type         String
  mileage      String
  transmission String
  fuel         String
  description  String
  dealer       String
  phone        String
  file         String?
  files        String[]
  features     String[]
  status       String   @default("active")
  featured     Boolean  @default(false)
  rating       Float    @default(4.5)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userId       String?
  user         User?    @relation("UserCars", fields: [userId], references: [id])

  @@map("cars")
}

model Subscriber {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())

  @@map("subscribers")
}
